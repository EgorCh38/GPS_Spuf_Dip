import numpy as np
from scipy.integrate import solve_ivp

import matplotlib.pyplot as plt


# Гравитационная постоянная и масса Земли
G = 6.67430e-20  # km^3/kg/s^2
M_earth = 5.972e24  # kg
mu = G * M_earth  # km^3/s^2


#satellite_derivatives \ Уравнения движения спутника
def sd(t, state):

    x, y, z, vx, vy, vz = state
    r = np.sqrt(x**2 + y**2 + z**2)

    ax = -mu * x / r**3
    ay = -mu * y / r**3
    az = -mu * z / r**3

    return [vx, vy, vz, ax, ay, az]


#predict_satellite_position \ Прогнозирует положение и скорость спутника в заданный момент времени
def psp(init, t):

    # Временной интервал для прогнозирования
    t_span = (0, t)

    # Решение дифференциальных уравнений
    solution = solve_ivp(sd, t_span, init, method='RK45')

    # Получение результатов для искомого момента времени
    if solution.t[-1] >= t:
        # Интерполяция для получения значений в искомый момент времени
        idx = np.searchsorted(solution.t, t)
        state_at_time = solution.y[:, idx]
        #return state_at_time[:3], state_at_time[3:]
        return state_at_time
    else:
        return None


#Ошибка
def err(pred, act):

    er = np.abs((np.abs(pred) - np.abs(act)) / np.abs(act)) * 100

    return er


# Пример использования
init = [-1725.637673338080, -5393.603847045250, 3747.094363298400,
                 4.55107968945379, -4.44002919422984, -4.28125378473599]
T = 60 * 20 * 1  # 20 минут в секундах

#position, velocity = predict_satellite_position(init, time_future)
#print("Прогнозируемое положение спутника через 20 минут:", position)
#print("Прогнозируемая скорость спутника через 20 минут:", velocity)





# 1я проверка
new_state = [600.497767713622, -6650.782394085190, 1253.880209886880, 4.90323246809128, -0.66954132340520, -5.85142568537421]
T = T = 60 * 8 * 1

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x1 = aver

print()




# 2я проверка
new_state = [2754.966315157180, -6005.925675432330, -1599.059236906370, 3.85387523861346, 3.28932457801798, -5.74345029176012]
T = T = 60 * 8 * 2

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x2 = aver

print()




# 3я проверка
new_state = [4123.154766098800, -3646.239011044720, -3994.567183012610, 1.70859733841074, 6.30057226092590, -3.99388697478385]
T = T = 60 * 8 * 3

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x3 = aver

print()




# 4я проверка
new_state = [4317.773552270510, -248.181793394927, -5250.080407002200, -0.91645427514254, 7.51215827135471, -1.11055329143166]
T = T = 60 * 8 * 4

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x4 = aver

print()




# 5я проверка
new_state = [3285.854004721040, 3220.563159959590, -5010.112652474290, -3.27856580221708, 6.58871274212412, 2.08615420258714]
T = T = 60 * 8 * 5

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x5 = aver

print()




# 6я проверка
new_state = [1320.399862941770, 5773.969960814500, -3342.671538669760, -4.71158846365959, 3.78960028974739, 4.69261357642867]
T = T = 60 * 8 * 6

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x6 = aver

print()




# 7я проверка
new_state = [-1020.805220457150, 6682.584985308740, -720.841639054839, -4.80471007214633, -0.09820420468216, 5.96413105552692]
T = T = 60 * 8 * 7

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x7 = aver

print()









# проверка 60
new_state = [-2122.786072437500, 6416.235831857540, 719.394883522390, -4.32230471133532, -2.10810821717713, 5.96433143180432]
T = T = 60 * 60

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x60 = aver

print()









# 8я проверка
new_state = [-3070.250809686120, 5682.900874209350, 2107.116609122940, -3.52493114322224, -3.96578200511798, 5.52910979347415]
T = T = 60 * 8 * 8

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x8 = aver

print()




# 9я проверка
new_state = [-4241.828841647330, 3058.457672288340, 4330.919501242720, -1.23702086087793, -6.70091722506893, 3.50884624540739]
T = T = 60 * 8 * 9

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x9 = aver

print()




# 10я проверка
new_state = [-4200.904174413080, -440.316808969023, 5313.337794811260, 1.40314718461039, -7.51974664232222, 0.48413013923690]
T = T = 60 * 8 * 10

#print("Новые данные: ", psp(init, T))
#print("Истинные данные: ", new_state)

e = err(psp(init, T), new_state)
#print("Погрешность: ", e)

aver = (e[0] + e[1] + e[2] + e[3] + e[4] + e[5] ) / 6
print("Средняя погрешность: ", aver, T / 60)
x10 = aver

print()










x = [0, 8, 16, 24, 32, 40, 48, 56]
y = [0, x1, x2, x3, x4, x5, x6, x7]

plt.plot(x, y) # строим график
plt.xlabel('время (мин)') # подписываем ось x
plt.ylabel('погрешность (%)') # подписываем ось y
plt.grid() # добавляем сетку на график

plt.show() # отображаем график
